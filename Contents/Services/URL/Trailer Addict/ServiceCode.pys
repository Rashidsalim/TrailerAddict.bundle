import certifi
import requests

RE_FILES = Regex('source src="([^"]+)"')
UNAVAILABLE_URL = 'https://api.tadata.me/imdb2ta/v2/unavailable.mp4'

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			video_resolution = '1080',
			audio_codec = AudioCodec.AAC,
			audio_channels = 2,
			optimized_for_streaming = True,
			parts = [
				PartObject(key=Callback(PlayVideo, url=url))
			]
		)
	]

####################################################################################################
def PlayVideo(url, **kwargs):

	if Prefs['api_key']:
		url = 'https://traileraddict.cache.tadata.me/%s' % (url.split('://')[-1])
		headers = {
			"User-Agent": "Trailer Addict URL Service",
			"X-Api-Key": Prefs['api_key']
		}
	else:
		url = 'https://www.traileraddict.com/%s' % (url.split('://')[-1])
		headers = {
			"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
			"Referer": "https://www.traileraddict.com/"
		}

	r = requests.get(url, headers=headers, verify=certifi.where())
	html = HTML.ElementFromString(r.text)

	js = html.xpath('//script[contains(., "eval(function(w,i,s,e)")]/text()')
	if len(js) > 0:
		r = requests.post('https://piplong.run/api/jsunpack/', data=js[0], verify=certifi.where())
	else:
		return Redirect(UNAVAILABLE_URL)

	files = RE_FILES.findall(r.text)

	if len(files) < 1:
		Log('Regex failed')
		return Redirect(UNAVAILABLE_URL)
	elif not '.mp4' in files[0]:
		return Redirect(UNAVAILABLE_URL)
	else:
		return Redirect(files[0])
